{"ast":null,"code":"import { createChart, CrosshairMode } from 'lightweight-charts';\nclass StockChart {\n  constructor() {\n    this.updateInfoPanel = time => {\n      var _dataPoint$volume;\n      let displayTime = time;\n      let dataPoint = null;\n      if (displayTime === null && this.latestData) displayTime = this.latestData.time;\n      if (displayTime !== null) dataPoint = this.dataMap.get(displayTime);\n      if (!dataPoint) {\n        document.getElementById('stockInfoPanel').style.display = 'none';\n        document.getElementById('volumeInfoPanel').style.display = 'none';\n        return;\n      }\n      const date = new Date(dataPoint.time * 1000);\n      let dateStr = this.formatDateForDisplay(date);\n      const volumeValue = (_dataPoint$volume = dataPoint.volume) !== null && _dataPoint$volume !== void 0 ? _dataPoint$volume : 0;\n      if (isNaN(dataPoint.open) || isNaN(dataPoint.high) || isNaN(dataPoint.low) || isNaN(dataPoint.close) || isNaN(volumeValue)) {\n        document.getElementById('stockInfoPanel').style.display = 'none';\n        document.getElementById('volumeInfoPanel').style.display = 'none';\n        return;\n      }\n      const priceChange = dataPoint.close - dataPoint.open;\n      const priceChangePercent = dataPoint.open === 0 ? 0 : priceChange / dataPoint.open * 100;\n      const priceDirection = priceChange >= 0 ? 'up' : 'down';\n      const sign = priceChange >= 0 ? '+' : '';\n      const color = priceDirection === 'up' ? '#ff3333' : '#5050ff';\n      let stockCodeName = this.stockInfo || this.stockCode;\n      document.getElementById('stockInfoPanel').innerHTML = `\n            <span style=\"font-weight: bold;\">${stockCodeName}</span> <span style=\"font-size: 10px;\">${dateStr}</span><br>\n            <span>시가 <span style=\"color: ${color};\">${this.formatNumber(dataPoint.open)}</span></span>\n            <span style=\"margin-left: 5px;\">고가 <span style=\"color: ${color};\">${this.formatNumber(dataPoint.high)}</span></span>\n            <span style=\"margin-left: 5px;\">저가 <span style=\"color: ${color};\">${this.formatNumber(dataPoint.low)}</span></span>\n            <span style=\"margin-left: 5px;\">종가 <span style=\"color: ${color};\">${this.formatNumber(dataPoint.close)}</span></span>\n            <span style=\"color: ${color}; margin-left: 5px;\">(${sign}${this.formatNumber(priceChange)} ${sign}${priceChangePercent.toFixed(2)}%)</span>\n        `;\n      document.getElementById('volumeInfoPanel').innerHTML = `\n            거래량 <span style=\"color: ${color};\">${this.formatVolume(volumeValue)}</span>\n        `;\n      document.getElementById('stockInfoPanel').style.display = 'block';\n      document.getElementById('volumeInfoPanel').style.display = 'block';\n    };\n    this.chartContainer = document.getElementById('chartContainer');\n    this.stockCode = '005930'; // 기본값\n    this.chartType = 'daily'; // 기본값\n    this.minuteType = '1'; // 분봉 타입\n    this.stockInfo = '';\n    this.dataMap = new Map();\n    this.latestData = null;\n    this.isSyncing = false;\n    this.createChart();\n    this.setupEventListeners();\n    this.fetchChartData();\n  }\n  createChart() {\n    this.chartContainer.innerHTML = `\n            <div class=\"chart-separator\">\n                <div id=\"priceChartContainer\" style=\"width: 100%; height: 65%; position: relative;\">\n                    <div id=\"stockInfoPanel\" style=\"position: absolute; top: 5px; left: 5px; background: rgba(255,255,255,0.85); padding: 5px 8px; border-radius: 4px; font-size: 11px; color: black; z-index: 10; pointer-events: none; line-height: 1.4;\"></div>\n                </div>\n                <div class=\"divider\" style=\"width: 100%; height: 2px; background-color: #dddddd;\"></div>\n                <div id=\"volumeChartContainer\" style=\"width: 100%; height: 35%; position: relative;\">\n                    <div id=\"volumeInfoPanel\" style=\"position: absolute; top: 5px; left: 5px; background: rgba(255,255,255,0.85); padding: 3px 6px; border-radius: 4px; font-size: 11px; color: black; z-index: 10; pointer-events: none;\"></div>\n                </div>\n            </div>\n        `;\n    const containerWidth = this.chartContainer.clientWidth;\n    const priceChartHeight = Math.floor(this.chartContainer.clientHeight * 0.65);\n    const volumeChartHeight = Math.floor(this.chartContainer.clientHeight * 0.35) - 2;\n    const commonOptions = {\n      width: containerWidth,\n      layout: {\n        background: {\n          color: '#ffffff'\n        },\n        textColor: '#333333',\n        fontFamily: \"'Open Sans', sans-serif\"\n      },\n      grid: {\n        vertLines: {\n          color: '#f0f0f0'\n        },\n        horzLines: {\n          color: '#f0f0f0'\n        }\n      },\n      crosshair: {\n        mode: CrosshairMode.Normal,\n        vertLine: {\n          color: '#999999',\n          width: 1,\n          style: 1,\n          labelBackgroundColor: '#ffffff',\n          labelVisible: false\n        },\n        horzLine: {\n          color: '#999999',\n          width: 1,\n          style: 1,\n          labelBackgroundColor: '#ffffff'\n        }\n      },\n      timeScale: {\n        borderColor: '#dddddd',\n        borderVisible: true,\n        timeVisible: true,\n        secondsVisible: false,\n        tickMarkFormatter: time => {\n          const date = new Date(time * 1000);\n          return this.formatDateForDisplay(date);\n        }\n      },\n      handleScroll: true,\n      handleScale: true\n    };\n    this.priceChart = createChart(document.getElementById('priceChartContainer'), {\n      ...commonOptions,\n      height: priceChartHeight,\n      rightPriceScale: {\n        borderColor: '#dddddd',\n        borderVisible: true,\n        scaleMargins: {\n          top: 0.1,\n          bottom: 0.1\n        },\n        visible: true,\n        autoScale: true\n      }\n    });\n    this.volumeChart = createChart(document.getElementById('volumeChartContainer'), {\n      ...commonOptions,\n      height: volumeChartHeight,\n      rightPriceScale: {\n        borderColor: '#dddddd',\n        borderVisible: true,\n        scaleMargins: {\n          top: 0.1,\n          bottom: 0.1\n        },\n        visible: true,\n        autoScale: true\n      }\n    });\n    this.candlestickSeries = this.priceChart.addCandlestickSeries({\n      upColor: '#ff3333',\n      downColor: '#5050ff',\n      borderVisible: false,\n      wickUpColor: '#ff3333',\n      wickDownColor: '#5050ff',\n      priceFormat: {\n        type: 'price',\n        precision: 0\n      }\n    });\n    this.volumeSeries = this.volumeChart.addHistogramSeries({\n      color: '#26a69a',\n      priceFormat: {\n        type: 'volume'\n      },\n      priceScaleId: 'volume',\n      scaleMargins: {\n        top: 0.1,\n        bottom: 0.1\n      }\n    });\n    this.syncCharts();\n    this.setupCrosshairSync();\n    window.addEventListener('resize', this.handleResize.bind(this));\n  }\n  syncCharts() {\n    this.priceChart.timeScale().subscribeVisibleLogicalRangeChange(timeRange => {\n      if (timeRange && !this.isSyncing) {\n        this.isSyncing = true;\n        this.volumeChart.timeScale().setVisibleLogicalRange(timeRange);\n        this.isSyncing = false;\n      }\n    });\n    this.volumeChart.timeScale().subscribeVisibleLogicalRangeChange(timeRange => {\n      if (timeRange && !this.isSyncing) {\n        this.isSyncing = true;\n        this.priceChart.timeScale().setVisibleLogicalRange(timeRange);\n        this.isSyncing = false;\n      }\n    });\n  }\n  formatDateForDisplay(date) {\n    switch (this.chartType) {\n      case 'yearly':\n        return date.getFullYear().toString();\n      case 'monthly':\n        return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}`;\n      case 'weekly':\n      case 'daily':\n        return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`;\n      case 'minute':\n        return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')} ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`;\n      default:\n        return date.toLocaleDateString('ko-KR');\n    }\n  }\n  setupEventListeners() {\n    // 종목 선택\n    const stockSelect = document.getElementById('stockSelector');\n    if (stockSelect) {\n      stockSelect.value = this.stockCode;\n      stockSelect.addEventListener('change', e => {\n        this.stockCode = e.target.value;\n        const stockOption = stockSelect.options[stockSelect.selectedIndex];\n        this.stockInfo = stockOption.textContent;\n        this.fetchChartData();\n      });\n    }\n\n    // 분봉 선택\n    const minuteSelect = document.getElementById('minuteSelector');\n    if (minuteSelect) {\n      minuteSelect.addEventListener('change', e => {\n        this.minuteType = e.target.value;\n        this.fetchChartData();\n      });\n    }\n\n    // 차트 타입 버튼\n    const chartTypeBtns = document.querySelectorAll('.chart-type-btn');\n    chartTypeBtns.forEach(btn => {\n      btn.addEventListener('click', e => {\n        const newType = e.target.dataset.type;\n        chartTypeBtns.forEach(b => b.classList.remove('active'));\n        e.target.classList.add('active');\n        this.chartType = newType;\n        if (minuteSelect) minuteSelect.style.display = newType === 'minute' ? 'block' : 'none';\n        this.fetchChartData();\n      });\n    });\n    window.addEventListener('resize', this.handleResize.bind(this));\n    this.handleResize();\n  }\n  handleResize() {\n    if (!this.priceChart || !this.volumeChart) return;\n    const chartWidth = this.chartContainer.clientWidth;\n    const totalHeight = this.chartContainer.clientHeight;\n    const priceChartHeight = Math.floor(totalHeight * 0.65);\n    const volumeChartHeight = Math.floor(totalHeight * 0.35) - 2;\n    this.priceChart.resize(chartWidth, priceChartHeight);\n    this.volumeChart.resize(chartWidth, volumeChartHeight);\n  }\n  async fetchChartData() {\n    try {\n      let apiId;\n      let requestData = {\n        stk_cd: this.stockCode,\n        upd_stkpc_tp: \"1\"\n      };\n      switch (this.chartType) {\n        case 'minute':\n          apiId = 'KA10080';\n          requestData.tic_scope = this.minuteType;\n          break;\n        case 'daily':\n          apiId = 'KA10081';\n          break;\n        case 'weekly':\n          apiId = 'KA10082';\n          break;\n        case 'monthly':\n          apiId = 'KA10083';\n          break;\n        case 'yearly':\n          apiId = 'KA10094';\n          break;\n        default:\n          apiId = 'KA10081';\n      }\n      const response = await fetch(`/api/stock/daily-chart/${this.stockCode}?apiId=${apiId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestData)\n      });\n      const data = await response.json();\n      let chartData;\n      switch (this.chartType) {\n        case 'monthly':\n          chartData = data.stk_mth_pole_chart_qry;\n          break;\n        case 'daily':\n          chartData = data.stk_dt_pole_chart_qry;\n          break;\n        case 'weekly':\n          chartData = data.stk_stk_pole_chart_qry;\n          break;\n        case 'yearly':\n          chartData = data.stk_yr_pole_chart_qry;\n          break;\n        case 'minute':\n          chartData = data.stk_min_pole_chart_qry || data.stk_stk_pole_chart_qry;\n          break;\n        default:\n          chartData = data.stk_dt_pole_chart_qry;\n      }\n      if (chartData && chartData.length > 0) {\n        const processedData = [];\n        for (const item of chartData) {\n          let dateStr = this.chartType === 'minute' ? item.cntr_tm : item.dt || item.trd_dt;\n          if (!dateStr) continue;\n          let timestamp;\n          try {\n            if (this.chartType === 'yearly' && dateStr.length === 4) {\n              timestamp = new Date(parseInt(dateStr), 0, 1).getTime() / 1000;\n            } else if (this.chartType === 'minute' && dateStr.length === 14) {\n              timestamp = new Date(parseInt(dateStr.slice(0, 4)), parseInt(dateStr.slice(4, 6)) - 1, parseInt(dateStr.slice(6, 8)), parseInt(dateStr.slice(8, 10)), parseInt(dateStr.slice(10, 12))).getTime() / 1000;\n            } else if (dateStr.length === 8) {\n              timestamp = new Date(parseInt(dateStr.slice(0, 4)), parseInt(dateStr.slice(4, 6)) - 1, parseInt(dateStr.slice(6, 8))).getTime() / 1000;\n            } else {\n              continue;\n            }\n          } catch (e) {\n            continue;\n          }\n          if (isNaN(timestamp)) continue;\n          let close = parseFloat(item.cur_prc || item.clos_prc);\n          if (isNaN(close)) continue;\n          let open = parseFloat(item.open_pric || item.open_prc);\n          let high = parseFloat(item.high_pric || item.high_prc);\n          let low = parseFloat(item.low_pric || item.low_prc);\n          let volume = parseFloat(item.trde_qty || item.trd_qty) || 0;\n          if (isNaN(open)) open = close;\n          if (isNaN(high)) high = Math.max(close, open);\n          if (isNaN(low)) low = Math.min(close, open);\n          processedData.push({\n            time: timestamp,\n            open,\n            high,\n            low,\n            close,\n            volume\n          });\n        }\n        if (processedData.length > 0) {\n          processedData.sort((a, b) => a.time - b.time);\n          const candlestickData = processedData.map(({\n            time,\n            open,\n            high,\n            low,\n            close\n          }) => ({\n            time,\n            open,\n            high,\n            low,\n            close\n          }));\n          const volumeData = processedData.map(({\n            time,\n            volume,\n            open,\n            close\n          }) => ({\n            time,\n            value: volume,\n            color: close >= open ? '#ff3333' : '#5050ff'\n          }));\n\n          // 여기서 setData로 차트 갱신!\n          this.candlestickSeries.setData(candlestickData);\n          this.volumeSeries.setData(volumeData);\n          this.updateChartOptionsForType();\n          this.priceChart.timeScale().fitContent();\n          this.volumeChart.timeScale().fitContent();\n          this.dataMap = new Map(processedData.map(d => [d.time, d]));\n          this.latestData = processedData[processedData.length - 1];\n          this.updateInfoPanel(null);\n          return;\n        }\n      }\n      // 데이터 없음\n      this.candlestickSeries.setData([]);\n      this.volumeSeries.setData([]);\n      this.dataMap.clear();\n      this.latestData = null;\n    } catch (error) {\n      this.candlestickSeries.setData([]);\n      this.volumeSeries.setData([]);\n      this.dataMap.clear();\n      this.latestData = null;\n    }\n  }\n  updateChartOptionsForType() {\n    const timeScaleOptions = {\n      timeVisible: this.chartType === 'minute',\n      secondsVisible: false\n    };\n    this.priceChart.applyOptions({\n      timeScale: timeScaleOptions\n    });\n    this.volumeChart.applyOptions({\n      timeScale: timeScaleOptions\n    });\n  }\n  setupCrosshairSync() {\n    this.priceChart.subscribeCrosshairMove(param => {\n      if (!param.point || !param.time) {\n        this.volumeChart.clearCrosshairPosition();\n        if (!param.point) this.updateInfoPanel(null);\n        return;\n      }\n      this.volumeChart.setCrosshairPosition(param.point, param.time);\n      this.updateInfoPanel(param.time);\n    });\n    this.volumeChart.subscribeCrosshairMove(param => {\n      if (!param.point || !param.time) {\n        this.priceChart.clearCrosshairPosition();\n        return;\n      }\n      this.priceChart.setCrosshairPosition(param.point, param.time);\n      this.updateInfoPanel(param.time);\n    });\n    this.chartContainer.addEventListener('mouseleave', () => {\n      this.updateInfoPanel(null);\n    });\n  }\n  formatNumber(num) {\n    var _num$toLocaleString;\n    return (_num$toLocaleString = num === null || num === void 0 ? void 0 : num.toLocaleString('ko-KR')) !== null && _num$toLocaleString !== void 0 ? _num$toLocaleString : '-';\n  }\n  formatVolume(vol) {\n    var _vol$toLocaleString;\n    if (vol >= 1e8) return (vol / 1e8).toFixed(2) + '억';\n    if (vol >= 1e4) return (vol / 1e4).toFixed(2) + '만';\n    return (_vol$toLocaleString = vol === null || vol === void 0 ? void 0 : vol.toLocaleString('ko-KR')) !== null && _vol$toLocaleString !== void 0 ? _vol$toLocaleString : '-';\n  }\n}\ndocument.addEventListener('DOMContentLoaded', () => {\n  new StockChart();\n});","map":{"version":3,"names":["createChart","CrosshairMode","StockChart","constructor","updateInfoPanel","time","_dataPoint$volume","displayTime","dataPoint","latestData","dataMap","get","document","getElementById","style","display","date","Date","dateStr","formatDateForDisplay","volumeValue","volume","isNaN","open","high","low","close","priceChange","priceChangePercent","priceDirection","sign","color","stockCodeName","stockInfo","stockCode","innerHTML","formatNumber","toFixed","formatVolume","chartContainer","chartType","minuteType","Map","isSyncing","setupEventListeners","fetchChartData","containerWidth","clientWidth","priceChartHeight","Math","floor","clientHeight","volumeChartHeight","commonOptions","width","layout","background","textColor","fontFamily","grid","vertLines","horzLines","crosshair","mode","Normal","vertLine","labelBackgroundColor","labelVisible","horzLine","timeScale","borderColor","borderVisible","timeVisible","secondsVisible","tickMarkFormatter","handleScroll","handleScale","priceChart","height","rightPriceScale","scaleMargins","top","bottom","visible","autoScale","volumeChart","candlestickSeries","addCandlestickSeries","upColor","downColor","wickUpColor","wickDownColor","priceFormat","type","precision","volumeSeries","addHistogramSeries","priceScaleId","syncCharts","setupCrosshairSync","window","addEventListener","handleResize","bind","subscribeVisibleLogicalRangeChange","timeRange","setVisibleLogicalRange","getFullYear","toString","getMonth","padStart","getDate","getHours","getMinutes","toLocaleDateString","stockSelect","value","e","target","stockOption","options","selectedIndex","textContent","minuteSelect","chartTypeBtns","querySelectorAll","forEach","btn","newType","dataset","b","classList","remove","add","chartWidth","totalHeight","resize","apiId","requestData","stk_cd","upd_stkpc_tp","tic_scope","response","fetch","method","headers","body","JSON","stringify","data","json","chartData","stk_mth_pole_chart_qry","stk_dt_pole_chart_qry","stk_stk_pole_chart_qry","stk_yr_pole_chart_qry","stk_min_pole_chart_qry","length","processedData","item","cntr_tm","dt","trd_dt","timestamp","parseInt","getTime","slice","parseFloat","cur_prc","clos_prc","open_pric","open_prc","high_pric","high_prc","low_pric","low_prc","trde_qty","trd_qty","max","min","push","sort","a","candlestickData","map","volumeData","setData","updateChartOptionsForType","fitContent","d","clear","error","timeScaleOptions","applyOptions","subscribeCrosshairMove","param","point","clearCrosshairPosition","setCrosshairPosition","num","_num$toLocaleString","toLocaleString","vol","_vol$toLocaleString"],"sources":["C:/Users/moshu/Documents/team_fivesense/five_sense/frontend/src/js/stockChart.js"],"sourcesContent":["import { createChart, CrosshairMode } from 'lightweight-charts';\r\n\r\nclass StockChart {\r\n    constructor() {\r\n        this.chartContainer = document.getElementById('chartContainer');\r\n        this.stockCode = '005930'; // 기본값\r\n        this.chartType = 'daily';   // 기본값\r\n        this.minuteType = '1';      // 분봉 타입\r\n        this.stockInfo = '';\r\n        this.dataMap = new Map();\r\n        this.latestData = null;\r\n        this.isSyncing = false;\r\n\r\n        this.createChart();\r\n        this.setupEventListeners();\r\n        this.fetchChartData();\r\n    }\r\n\r\n    createChart() {\r\n        this.chartContainer.innerHTML = `\r\n            <div class=\"chart-separator\">\r\n                <div id=\"priceChartContainer\" style=\"width: 100%; height: 65%; position: relative;\">\r\n                    <div id=\"stockInfoPanel\" style=\"position: absolute; top: 5px; left: 5px; background: rgba(255,255,255,0.85); padding: 5px 8px; border-radius: 4px; font-size: 11px; color: black; z-index: 10; pointer-events: none; line-height: 1.4;\"></div>\r\n                </div>\r\n                <div class=\"divider\" style=\"width: 100%; height: 2px; background-color: #dddddd;\"></div>\r\n                <div id=\"volumeChartContainer\" style=\"width: 100%; height: 35%; position: relative;\">\r\n                    <div id=\"volumeInfoPanel\" style=\"position: absolute; top: 5px; left: 5px; background: rgba(255,255,255,0.85); padding: 3px 6px; border-radius: 4px; font-size: 11px; color: black; z-index: 10; pointer-events: none;\"></div>\r\n                </div>\r\n            </div>\r\n        `;\r\n\r\n        const containerWidth = this.chartContainer.clientWidth;\r\n        const priceChartHeight = Math.floor(this.chartContainer.clientHeight * 0.65);\r\n        const volumeChartHeight = Math.floor(this.chartContainer.clientHeight * 0.35) - 2;\r\n\r\n        const commonOptions = {\r\n            width: containerWidth,\r\n            layout: {\r\n                background: { color: '#ffffff' },\r\n                textColor: '#333333',\r\n                fontFamily: \"'Open Sans', sans-serif\"\r\n            },\r\n            grid: {\r\n                vertLines: { color: '#f0f0f0' },\r\n                horzLines: { color: '#f0f0f0' }\r\n            },\r\n            crosshair: {\r\n                mode: CrosshairMode.Normal,\r\n                vertLine: {\r\n                    color: '#999999',\r\n                    width: 1,\r\n                    style: 1,\r\n                    labelBackgroundColor: '#ffffff',\r\n                    labelVisible: false\r\n                },\r\n                horzLine: {\r\n                    color: '#999999',\r\n                    width: 1,\r\n                    style: 1,\r\n                    labelBackgroundColor: '#ffffff'\r\n                }\r\n            },\r\n            timeScale: {\r\n                borderColor: '#dddddd',\r\n                borderVisible: true,\r\n                timeVisible: true,\r\n                secondsVisible: false,\r\n                tickMarkFormatter: (time) => {\r\n                    const date = new Date(time * 1000);\r\n                    return this.formatDateForDisplay(date);\r\n                }\r\n            },\r\n            handleScroll: true,\r\n            handleScale: true\r\n        };\r\n\r\n        this.priceChart = createChart(document.getElementById('priceChartContainer'), {\r\n            ...commonOptions,\r\n            height: priceChartHeight,\r\n            rightPriceScale: {\r\n                borderColor: '#dddddd',\r\n                borderVisible: true,\r\n                scaleMargins: { top: 0.1, bottom: 0.1 },\r\n                visible: true,\r\n                autoScale: true\r\n            }\r\n        });\r\n\r\n        this.volumeChart = createChart(document.getElementById('volumeChartContainer'), {\r\n            ...commonOptions,\r\n            height: volumeChartHeight,\r\n            rightPriceScale: {\r\n                borderColor: '#dddddd',\r\n                borderVisible: true,\r\n                scaleMargins: { top: 0.1, bottom: 0.1 },\r\n                visible: true,\r\n                autoScale: true\r\n            }\r\n        });\r\n\r\n        this.candlestickSeries = this.priceChart.addCandlestickSeries({\r\n            upColor: '#ff3333',\r\n            downColor: '#5050ff',\r\n            borderVisible: false,\r\n            wickUpColor: '#ff3333',\r\n            wickDownColor: '#5050ff',\r\n            priceFormat: { type: 'price', precision: 0 }\r\n        });\r\n\r\n        this.volumeSeries = this.volumeChart.addHistogramSeries({\r\n            color: '#26a69a',\r\n            priceFormat: { type: 'volume' },\r\n            priceScaleId: 'volume',\r\n            scaleMargins: { top: 0.1, bottom: 0.1 }\r\n        });\r\n\r\n        this.syncCharts();\r\n        this.setupCrosshairSync();\r\n        window.addEventListener('resize', this.handleResize.bind(this));\r\n    }\r\n\r\n    syncCharts() {\r\n        this.priceChart.timeScale().subscribeVisibleLogicalRangeChange(timeRange => {\r\n            if (timeRange && !this.isSyncing) {\r\n                this.isSyncing = true;\r\n                this.volumeChart.timeScale().setVisibleLogicalRange(timeRange);\r\n                this.isSyncing = false;\r\n            }\r\n        });\r\n\r\n        this.volumeChart.timeScale().subscribeVisibleLogicalRangeChange(timeRange => {\r\n            if (timeRange && !this.isSyncing) {\r\n                this.isSyncing = true;\r\n                this.priceChart.timeScale().setVisibleLogicalRange(timeRange);\r\n                this.isSyncing = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    formatDateForDisplay(date) {\r\n        switch (this.chartType) {\r\n            case 'yearly': return date.getFullYear().toString();\r\n            case 'monthly': return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}`;\r\n            case 'weekly':\r\n            case 'daily': return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`;\r\n            case 'minute': return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')} ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`;\r\n            default: return date.toLocaleDateString('ko-KR');\r\n        }\r\n    }\r\n\r\n    setupEventListeners() {\r\n        // 종목 선택\r\n        const stockSelect = document.getElementById('stockSelector');\r\n        if (stockSelect) {\r\n            stockSelect.value = this.stockCode;\r\n            stockSelect.addEventListener('change', (e) => {\r\n                this.stockCode = e.target.value;\r\n                const stockOption = stockSelect.options[stockSelect.selectedIndex];\r\n                this.stockInfo = stockOption.textContent;\r\n                this.fetchChartData();\r\n            });\r\n        }\r\n\r\n        // 분봉 선택\r\n        const minuteSelect = document.getElementById('minuteSelector');\r\n        if (minuteSelect) {\r\n            minuteSelect.addEventListener('change', (e) => {\r\n                this.minuteType = e.target.value;\r\n                this.fetchChartData();\r\n            });\r\n        }\r\n\r\n        // 차트 타입 버튼\r\n        const chartTypeBtns = document.querySelectorAll('.chart-type-btn');\r\n        chartTypeBtns.forEach(btn => {\r\n            btn.addEventListener('click', (e) => {\r\n                const newType = e.target.dataset.type;\r\n                chartTypeBtns.forEach(b => b.classList.remove('active'));\r\n                e.target.classList.add('active');\r\n                this.chartType = newType;\r\n                if (minuteSelect) minuteSelect.style.display = (newType === 'minute') ? 'block' : 'none';\r\n                this.fetchChartData();\r\n            });\r\n        });\r\n\r\n        window.addEventListener('resize', this.handleResize.bind(this));\r\n        this.handleResize();\r\n    }\r\n\r\n    handleResize() {\r\n        if (!this.priceChart || !this.volumeChart) return;\r\n        const chartWidth = this.chartContainer.clientWidth;\r\n        const totalHeight = this.chartContainer.clientHeight;\r\n        const priceChartHeight = Math.floor(totalHeight * 0.65);\r\n        const volumeChartHeight = Math.floor(totalHeight * 0.35) - 2;\r\n        this.priceChart.resize(chartWidth, priceChartHeight);\r\n        this.volumeChart.resize(chartWidth, volumeChartHeight);\r\n    }\r\n\r\n    async fetchChartData() {\r\n        try {\r\n            let apiId;\r\n            let requestData = { stk_cd: this.stockCode, upd_stkpc_tp: \"1\" };\r\n            switch (this.chartType) {\r\n                case 'minute': apiId = 'KA10080'; requestData.tic_scope = this.minuteType; break;\r\n                case 'daily': apiId = 'KA10081'; break;\r\n                case 'weekly': apiId = 'KA10082'; break;\r\n                case 'monthly': apiId = 'KA10083'; break;\r\n                case 'yearly': apiId = 'KA10094'; break;\r\n                default: apiId = 'KA10081';\r\n            }\r\n\r\n            const response = await fetch(`/api/stock/daily-chart/${this.stockCode}?apiId=${apiId}`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(requestData)\r\n            });\r\n\r\n            const data = await response.json();\r\n            let chartData;\r\n            switch (this.chartType) {\r\n                case 'monthly': chartData = data.stk_mth_pole_chart_qry; break;\r\n                case 'daily': chartData = data.stk_dt_pole_chart_qry; break;\r\n                case 'weekly': chartData = data.stk_stk_pole_chart_qry; break;\r\n                case 'yearly': chartData = data.stk_yr_pole_chart_qry; break;\r\n                case 'minute': chartData = data.stk_min_pole_chart_qry || data.stk_stk_pole_chart_qry; break;\r\n                default: chartData = data.stk_dt_pole_chart_qry;\r\n            }\r\n\r\n            if (chartData && chartData.length > 0) {\r\n                const processedData = [];\r\n                for (const item of chartData) {\r\n                    let dateStr = (this.chartType === 'minute') ? item.cntr_tm : (item.dt || item.trd_dt);\r\n                    if (!dateStr) continue;\r\n                    let timestamp;\r\n                    try {\r\n                        if (this.chartType === 'yearly' && dateStr.length === 4) {\r\n                            timestamp = new Date(parseInt(dateStr), 0, 1).getTime() / 1000;\r\n                        } else if (this.chartType === 'minute' && dateStr.length === 14) {\r\n                            timestamp = new Date(\r\n                                parseInt(dateStr.slice(0, 4)),\r\n                                parseInt(dateStr.slice(4, 6)) - 1,\r\n                                parseInt(dateStr.slice(6, 8)),\r\n                                parseInt(dateStr.slice(8, 10)),\r\n                                parseInt(dateStr.slice(10, 12))\r\n                            ).getTime() / 1000;\r\n                        } else if (dateStr.length === 8) {\r\n                            timestamp = new Date(\r\n                                parseInt(dateStr.slice(0, 4)),\r\n                                parseInt(dateStr.slice(4, 6)) - 1,\r\n                                parseInt(dateStr.slice(6, 8))\r\n                            ).getTime() / 1000;\r\n                        } else {\r\n                            continue;\r\n                        }\r\n                    } catch (e) {\r\n                        continue;\r\n                    }\r\n                    if (isNaN(timestamp)) continue;\r\n\r\n                    let close = parseFloat(item.cur_prc || item.clos_prc);\r\n                    if (isNaN(close)) continue;\r\n                    let open = parseFloat(item.open_pric || item.open_prc);\r\n                    let high = parseFloat(item.high_pric || item.high_prc);\r\n                    let low = parseFloat(item.low_pric || item.low_prc);\r\n                    let volume = parseFloat(item.trde_qty || item.trd_qty) || 0;\r\n                    if (isNaN(open)) open = close;\r\n                    if (isNaN(high)) high = Math.max(close, open);\r\n                    if (isNaN(low)) low = Math.min(close, open);\r\n\r\n                    processedData.push({ time: timestamp, open, high, low, close, volume });\r\n                }\r\n\r\n                if (processedData.length > 0) {\r\n                    processedData.sort((a, b) => a.time - b.time);\r\n                    const candlestickData = processedData.map(({ time, open, high, low, close }) => ({ time, open, high, low, close }));\r\n                    const volumeData = processedData.map(({ time, volume, open, close }) => ({\r\n                        time,\r\n                        value: volume,\r\n                        color: close >= open ? '#ff3333' : '#5050ff'\r\n                    }));\r\n\r\n                    // 여기서 setData로 차트 갱신!\r\n                    this.candlestickSeries.setData(candlestickData);\r\n                    this.volumeSeries.setData(volumeData);\r\n                    this.updateChartOptionsForType();\r\n                    this.priceChart.timeScale().fitContent();\r\n                    this.volumeChart.timeScale().fitContent();\r\n                    this.dataMap = new Map(processedData.map(d => [d.time, d]));\r\n                    this.latestData = processedData[processedData.length - 1];\r\n                    this.updateInfoPanel(null);\r\n                    return;\r\n                }\r\n            }\r\n            // 데이터 없음\r\n            this.candlestickSeries.setData([]);\r\n            this.volumeSeries.setData([]);\r\n            this.dataMap.clear();\r\n            this.latestData = null;\r\n        } catch (error) {\r\n            this.candlestickSeries.setData([]);\r\n            this.volumeSeries.setData([]);\r\n            this.dataMap.clear();\r\n            this.latestData = null;\r\n        }\r\n    }\r\n\r\n    updateChartOptionsForType() {\r\n        const timeScaleOptions = {\r\n            timeVisible: this.chartType === 'minute',\r\n            secondsVisible: false\r\n        };\r\n        this.priceChart.applyOptions({ timeScale: timeScaleOptions });\r\n        this.volumeChart.applyOptions({ timeScale: timeScaleOptions });\r\n    }\r\n\r\n    updateInfoPanel = (time) => {\r\n        let displayTime = time;\r\n        let dataPoint = null;\r\n        if (displayTime === null && this.latestData) displayTime = this.latestData.time;\r\n        if (displayTime !== null) dataPoint = this.dataMap.get(displayTime);\r\n        if (!dataPoint) {\r\n            document.getElementById('stockInfoPanel').style.display = 'none';\r\n            document.getElementById('volumeInfoPanel').style.display = 'none';\r\n            return;\r\n        }\r\n\r\n        const date = new Date(dataPoint.time * 1000);\r\n        let dateStr = this.formatDateForDisplay(date);\r\n        const volumeValue = dataPoint.volume ?? 0;\r\n        if (isNaN(dataPoint.open) || isNaN(dataPoint.high) || isNaN(dataPoint.low) || isNaN(dataPoint.close) || isNaN(volumeValue)) {\r\n            document.getElementById('stockInfoPanel').style.display = 'none';\r\n            document.getElementById('volumeInfoPanel').style.display = 'none';\r\n            return;\r\n        }\r\n\r\n        const priceChange = dataPoint.close - dataPoint.open;\r\n        const priceChangePercent = dataPoint.open === 0 ? 0 : (priceChange / dataPoint.open * 100);\r\n        const priceDirection = priceChange >= 0 ? 'up' : 'down';\r\n        const sign = priceChange >= 0 ? '+' : '';\r\n        const color = priceDirection === 'up' ? '#ff3333' : '#5050ff';\r\n        let stockCodeName = this.stockInfo || this.stockCode;\r\n\r\n        document.getElementById('stockInfoPanel').innerHTML = `\r\n            <span style=\"font-weight: bold;\">${stockCodeName}</span> <span style=\"font-size: 10px;\">${dateStr}</span><br>\r\n            <span>시가 <span style=\"color: ${color};\">${this.formatNumber(dataPoint.open)}</span></span>\r\n            <span style=\"margin-left: 5px;\">고가 <span style=\"color: ${color};\">${this.formatNumber(dataPoint.high)}</span></span>\r\n            <span style=\"margin-left: 5px;\">저가 <span style=\"color: ${color};\">${this.formatNumber(dataPoint.low)}</span></span>\r\n            <span style=\"margin-left: 5px;\">종가 <span style=\"color: ${color};\">${this.formatNumber(dataPoint.close)}</span></span>\r\n            <span style=\"color: ${color}; margin-left: 5px;\">(${sign}${this.formatNumber(priceChange)} ${sign}${priceChangePercent.toFixed(2)}%)</span>\r\n        `;\r\n        document.getElementById('volumeInfoPanel').innerHTML = `\r\n            거래량 <span style=\"color: ${color};\">${this.formatVolume(volumeValue)}</span>\r\n        `;\r\n        document.getElementById('stockInfoPanel').style.display = 'block';\r\n        document.getElementById('volumeInfoPanel').style.display = 'block';\r\n    };\r\n\r\n    setupCrosshairSync() {\r\n        this.priceChart.subscribeCrosshairMove(param => {\r\n            if (!param.point || !param.time) {\r\n                this.volumeChart.clearCrosshairPosition();\r\n                if (!param.point) this.updateInfoPanel(null);\r\n                return;\r\n            }\r\n            this.volumeChart.setCrosshairPosition(param.point, param.time);\r\n            this.updateInfoPanel(param.time);\r\n        });\r\n\r\n        this.volumeChart.subscribeCrosshairMove(param => {\r\n            if (!param.point || !param.time) {\r\n                this.priceChart.clearCrosshairPosition();\r\n                return;\r\n            }\r\n            this.priceChart.setCrosshairPosition(param.point, param.time);\r\n            this.updateInfoPanel(param.time);\r\n        });\r\n\r\n        this.chartContainer.addEventListener('mouseleave', () => {\r\n            this.updateInfoPanel(null);\r\n        });\r\n    }\r\n\r\n    formatNumber(num) {\r\n        return num?.toLocaleString('ko-KR') ?? '-';\r\n    }\r\n\r\n    formatVolume(vol) {\r\n        if (vol >= 1e8) return (vol / 1e8).toFixed(2) + '억';\r\n        if (vol >= 1e4) return (vol / 1e4).toFixed(2) + '만';\r\n        return vol?.toLocaleString('ko-KR') ?? '-';\r\n    }\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    new StockChart();\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}